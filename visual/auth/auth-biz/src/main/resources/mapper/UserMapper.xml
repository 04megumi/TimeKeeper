<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.timekeeper.auth.biz.user.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.timekeeper.auth.api.entity.User">
        <id property="uid" column="uid" />
        <result property="name" column="name" />
        <result property="nameEn" column="name_en" />
        <result property="phoneNumber" column="phone_num" />
        <result property="password" column="password" />
        <result property="openId" column="openid" />
        <result property="role" column="role" />
        <result property="isDeleted" column="is_deleted" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="createBy" column="create_by" />
        <result property="updateBy" column="update_by" />
        <result property="version" column="version" />
    </resultMap>

    <!-- 根据用户ID查询用户 -->
    <select id="getUserByUserId" parameterType="string" resultMap="UserResultMap">
        SELECT
        uid,
        name,
        name_en,
        phone_num,
        password,
        openid,
        role,
        is_deleted,
        create_time,
        update_time,
        create_by,
        update_by,
        version
        FROM user
        WHERE uid = #{uid}
    </select>

    <!-- 根据英文用户名查询用户 -->
    <select id="getUserByUserNameEn" parameterType="string" resultMap="UserResultMap">
        SELECT
            uid,
            name,
            name_en,
            phone_num,
            password,
            openid,
            role,
            is_deleted,
            create_time,
            update_time,
            create_by,
            update_by,
            version
        FROM user
        WHERE name_en = #{userNameEn}
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="getUserByPhoneNum" parameterType="string" resultMap="UserResultMap">
        SELECT
            uid,
            name,
            name_en,
            phone_num,
            password,
            openid,
            role,
            is_deleted,
            create_time,
            update_time,
            create_by,
            update_by,
            version
        FROM user
        WHERE phone_num = #{phoneNum}
    </select>

    <!-- 根据openid -->
    <select id="getUserByOpenidUserName" parameterType="string" resultMap="UserResultMap">
        SELECT
            uid,
            name,
            name_en,
            phone_num,
            password,
            openid,
            is_deleted,
            create_time,
            update_time,
            create_by,
            update_by,
            version
        FROM user
        WHERE openid = #{openid}
          AND name = #{userName}
    </select>

    <!-- 恢复被软删除的用户：按 uid -->
    <update id="restoreUserByUser">
        UPDATE user
        SET
            name = #{name},
            name_en = #{nameEn},
            phone_num = #{phoneNumber},
            openid = #{openId},
            role = #{role},
            password = #{password},
            is_deleted = 0
        WHERE uid = #{uid}
          AND is_deleted = 1
    </update>

</mapper>